(testing /course/cs4500f23/ta/23SwDev/Code/10/xclients /course/cs4500f23/ta/23SwDev/Code/10/xserver)
(testing /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/0-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/0-out.json)
Eve dropped out on setup: 'time [time limit 5]
Adam dropped out on take-turn: "illegal placement or re-placement request" [time limit 5]
(testing /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/1-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/1-out.json)
jsexpr->player does not match JActorSpec schema [options beyond 'plain' don't match] 
 ["Aiden","ldasg","new-tiles","3"]
jsexpr->string : value does not satisfy string?
  [["Meixia","dag"],["Aiden","ldasg","new-tiles","3"]]
value does not match JActors schema:
#f
map: contract violation
  expected: list?
  given: #f
  context...:
   body of top-level
   /proj/racket/plt-released/recent/collects/racket/private/map.rkt:257:2: gen-map
   /course/cs4500f23/ta/Qwirkle/Client/client.rkt:111:0: clients
---------------------------------
(*** score 0)
(*** on)
'(#hasheq((port . 10000)
          (quiet . #f)
          (ref-spec
           .
           #hasheq((config-s . #hasheq((fbo . 6) (qbo . 8)))
                   (observe . #f)
                   (per-turn . 5)
                   (quiet . #f)
                   (state0
                    .
                    #hasheq((map
                             .
                             ((0
                               (0
                                #hasheq((color . "yellow")
                                        (shape . "star"))))))
                            (players
                             .
                             (#hasheq((name . "Meixia")
                                      (score . 0)
                                      (tile*
                                       .
                                       (#hasheq((color . "green")
                                                (shape . "circle"))
                                        #hasheq((color . "blue")
                                                (shape . "8star"))
                                        #hasheq((color . "purple")
                                                (shape . "clover"))
                                        #hasheq((color . "purple")
                                                (shape . "clover"))
                                        #hasheq((color . "yellow")
                                                (shape . "diamond"))
                                        #hasheq((color . "red")
                                                (shape . "circle")))))
                              #hasheq((name . "Aiden")
                                      (score . 0)
                                      (tile*
                                       .
                                       (#hasheq((color . "red")
                                                (shape . "star"))
                                        #hasheq((color . "green")
                                                (shape . "square"))
                                        #hasheq((color . "purple")
                                                (shape . "clover"))
                                        #hasheq((color . "purple")
                                                (shape . "clover"))
                                        #hasheq((color . "purple")
                                                (shape . "clover"))
                                        #hasheq((color . "purple")
                                                (shape . "clover")))))))
                            (tile*
                             .
                             (#hasheq((color . "purple") (shape . "clover"))
                              #hasheq((color . "green") (shape . "star"))
                              #hasheq((color . "purple") (shape . "clover"))
                              #hasheq((color . "purple") (shape . "clover"))
                              #hasheq((color . "orange") (shape . "diamond"))
                              #hasheq((color . "purple")
                                      (shape . "clover"))))))))
          (server-tries . 2)
          (server-wait . 20)
          (wait-for-signup . 3))
  #hasheq((host . "127.0.0.1")
          (players . (("Meixia" "dag") ("Aiden" "ldasg" "new-tiles" "3")))
          (port . 10000)
          (quiet . #f)
          (wait . 1)))
(*** expected)
'((("Meixia") ("Aiden")))
(*** but received)
'(((plain fast with-newline plain-unicode) ((() ()))))


(testing /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/2-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/2-out.json)
Meixia dropped out on take-turn: "illegal placement or re-placement request" [time limit 5]
Aiden won
(testing /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/3-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/3-out.json)
remote proxy-context caught exn:
 /: division by zero
Meixia dropped out on take-turn: (exn:fail:contract:blame "jsexpr->action*: contract violation\n  expected: jsexpr?\n  given: #<eof>\n  in: the 1st argument of\n      (-> jsexpr? (or/c action*? #f))\n  contract from: \n      (/course/cs4500f23/ta/Qwirkle/Common/placement.rkt\n       json)\n  blaming: <pkgs>/Qwirkle/Server/player.rkt\n   (assuming the contract is correct)\n  at: <pkgs>/Qwirkle/Common/placement.rkt:45:5" #<continuation-mark-set> #<blame-yes-swap>) [time limit 5]
Aiden won
(testing /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/4-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/4-out.json)
Tom dropped out on take-turn: 'time [time limit 5]
Jerry won
Carol lost
(testing /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/5-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/5-out.json)
Jerry dropped out on take-turn: "illegal placement or re-placement request" [time limit 5]
Tom won
remote proxy-context caught exn:
 /: division by zero
Tom dropped out on win: (exn:fail:contract "jsexpr->string: expected argument of type <legal JSON value>; given: #<eof>" #<continuation-mark-set>) [time limit 5]
Carol lost
(testing /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/6-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/6-out.json)
Tom dropped out on take-turn: "illegal placement or re-placement request" [time limit 5]
remote proxy-context caught exn:
 /: division by zero
Carol dropped out on new-tiles: (exn:fail:contract "jsexpr->string: expected argument of type <legal JSON value>; given: #<eof>" #<continuation-mark-set>) [time limit 5]
Jerry won
Jerry dropped out on win: 'time [time limit 5]
(testing /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/7-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/7-out.json)
remote proxy-context caught exn:
 /: division by zero
Matthias2 dropped out on setup: (exn:fail:contract "jsexpr->string: expected argument of type <legal JSON value>; given: #<eof>" #<continuation-mark-set>) [time limit 5]
Matthias1 won
Matthias3 lost
Matthias4 lost
(testing /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/8-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/8-out.json)
Matthias1 dropped out on take-turn: "illegal placement or re-placement request" [time limit 5]
Matthias3 dropped out on take-turn: 'time [time limit 5]
Matthias4 won
remote proxy-context caught exn:
 /: division by zero
Matthias4 dropped out on win: (exn:fail:contract "jsexpr->string: expected argument of type <legal JSON value>; given: #<eof>" #<continuation-mark-set>) [time limit 5]
Matthias2 lost
(testing /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/9-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/9-out.json)
remote proxy-context caught exn:
 /: division by zero
Matthias2 dropped out on setup: (exn:fail:contract "jsexpr->string: expected argument of type <legal JSON value>; given: #<eof>" #<continuation-mark-set>) [time limit 5]
remote proxy-context caught exn:
 set-first: contract violation
  expected: (and/c generic-set? (not/c set-empty?))
  given: (set)
Matthias1 dropped out on take-turn: (exn:fail:contract:blame "jsexpr->action*: contract violation\n  expected: jsexpr?\n  given: #<eof>\n  in: the 1st argument of\n      (-> jsexpr? (or/c action*? #f))\n  contract from: \n      (/course/cs4500f23/ta/Qwirkle/Common/placement.rkt\n       json)\n  blaming: <pkgs>/Qwirkle/Server/player.rkt\n   (assuming the contract is correct)\n  at: <pkgs>/Qwirkle/Common/placement.rkt:45:5" #<continuation-mark-set> #<blame-yes-swap>) [time limit 5]
Matthias4 won
Matthias3 lost
((/course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/0-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/0-out.json) (/course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/2-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/2-out.json) (/course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/3-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/3-out.json) (/course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/4-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/4-out.json) (/course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/5-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/5-out.json) (/course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/6-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/6-out.json) (/course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/7-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/7-out.json) (/course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/8-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/8-out.json) (/course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/9-in.json /course/cs4500f23/ta/tedium-workdir/github/stoic-armadillos/10/Tests/9-out.json))
((passed 9) (total 10) (partial-score 9))
